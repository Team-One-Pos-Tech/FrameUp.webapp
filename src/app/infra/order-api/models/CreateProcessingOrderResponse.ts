/* tslint:disable */
/* eslint-disable */
/**
 * FrameUp.OrderService.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProcessingStatus } from './ProcessingStatus';
import {
    ProcessingStatusFromJSON,
    ProcessingStatusFromJSONTyped,
    ProcessingStatusToJSON,
    ProcessingStatusToJSONTyped,
} from './ProcessingStatus';
import type { Notification } from './Notification';
import {
    NotificationFromJSON,
    NotificationFromJSONTyped,
    NotificationToJSON,
    NotificationToJSONTyped,
} from './Notification';

/**
 * 
 * @export
 * @interface CreateProcessingOrderResponse
 */
export interface CreateProcessingOrderResponse {
    /**
     * 
     * @type {Array<Notification>}
     * @memberof CreateProcessingOrderResponse
     */
    readonly notifications?: Array<Notification> | null;
    /**
     * 
     * @type {boolean}
     * @memberof CreateProcessingOrderResponse
     */
    readonly isValid?: boolean;
    /**
     * 
     * @type {ProcessingStatus}
     * @memberof CreateProcessingOrderResponse
     */
    status?: ProcessingStatus;
    /**
     * 
     * @type {string}
     * @memberof CreateProcessingOrderResponse
     */
    readonly id?: string;
}



/**
 * Check if a given object implements the CreateProcessingOrderResponse interface.
 */
export function instanceOfCreateProcessingOrderResponse(value: object): value is CreateProcessingOrderResponse {
    return true;
}

export function CreateProcessingOrderResponseFromJSON(json: any): CreateProcessingOrderResponse {
    return CreateProcessingOrderResponseFromJSONTyped(json, false);
}

export function CreateProcessingOrderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateProcessingOrderResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'notifications': json['notifications'] == null ? undefined : ((json['notifications'] as Array<any>).map(NotificationFromJSON)),
        'isValid': json['isValid'] == null ? undefined : json['isValid'],
        'status': json['status'] == null ? undefined : ProcessingStatusFromJSON(json['status']),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function CreateProcessingOrderResponseToJSON(json: any): CreateProcessingOrderResponse {
    return CreateProcessingOrderResponseToJSONTyped(json, false);
}

export function CreateProcessingOrderResponseToJSONTyped(value?: Omit<CreateProcessingOrderResponse, 'notifications'|'isValid'|'id'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': ProcessingStatusToJSON(value['status']),
    };
}

