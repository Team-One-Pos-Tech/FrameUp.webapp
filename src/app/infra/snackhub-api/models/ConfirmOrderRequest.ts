/* tslint:disable */
/* eslint-disable */
/**
 * Snack Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Item } from './Item';
import {
    ItemFromJSON,
    ItemFromJSONTyped,
    ItemToJSON,
    ItemToJSONTyped,
} from './Item';

/**
 * 
 * @export
 * @interface ConfirmOrderRequest
 */
export interface ConfirmOrderRequest {
    /**
     * 
     * @type {string}
     * @memberof ConfirmOrderRequest
     */
    identifier?: string | null;
    /**
     * 
     * @type {Array<Item>}
     * @memberof ConfirmOrderRequest
     */
    items?: Array<Item> | null;
}

/**
 * Check if a given object implements the ConfirmOrderRequest interface.
 */
export function instanceOfConfirmOrderRequest(value: object): value is ConfirmOrderRequest {
    return true;
}

export function ConfirmOrderRequestFromJSON(json: any): ConfirmOrderRequest {
    return ConfirmOrderRequestFromJSONTyped(json, false);
}

export function ConfirmOrderRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfirmOrderRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'identifier': json['identifier'] == null ? undefined : json['identifier'],
        'items': json['items'] == null ? undefined : ((json['items'] as Array<any>).map(ItemFromJSON)),
    };
}

export function ConfirmOrderRequestToJSON(json: any): ConfirmOrderRequest {
    return ConfirmOrderRequestToJSONTyped(json, false);
}

export function ConfirmOrderRequestToJSONTyped(value?: ConfirmOrderRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'identifier': value['identifier'],
        'items': value['items'] == null ? undefined : ((value['items'] as Array<any>).map(ItemToJSON)),
    };
}

