/* tslint:disable */
/* eslint-disable */
/**
 * Snack Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Category } from './Category';
import {
    CategoryFromJSON,
    CategoryFromJSONTyped,
    CategoryToJSON,
    CategoryToJSONTyped,
} from './Category';
import type { Notification } from './Notification';
import {
    NotificationFromJSON,
    NotificationFromJSONTyped,
    NotificationToJSON,
    NotificationToJSONTyped,
} from './Notification';

/**
 * 
 * @export
 * @interface ManageProductRequest
 */
export interface ManageProductRequest {
    /**
     * 
     * @type {Array<Notification>}
     * @memberof ManageProductRequest
     */
    readonly notifications?: Array<Notification> | null;
    /**
     * 
     * @type {boolean}
     * @memberof ManageProductRequest
     */
    readonly isValid?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ManageProductRequest
     */
    name?: string | null;
    /**
     * 
     * @type {Category}
     * @memberof ManageProductRequest
     */
    category?: Category;
    /**
     * 
     * @type {number}
     * @memberof ManageProductRequest
     */
    price?: number;
    /**
     * 
     * @type {string}
     * @memberof ManageProductRequest
     */
    description?: string | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ManageProductRequest
     */
    images?: Array<string> | null;
}



/**
 * Check if a given object implements the ManageProductRequest interface.
 */
export function instanceOfManageProductRequest(value: object): value is ManageProductRequest {
    return true;
}

export function ManageProductRequestFromJSON(json: any): ManageProductRequest {
    return ManageProductRequestFromJSONTyped(json, false);
}

export function ManageProductRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ManageProductRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'notifications': json['notifications'] == null ? undefined : ((json['notifications'] as Array<any>).map(NotificationFromJSON)),
        'isValid': json['isValid'] == null ? undefined : json['isValid'],
        'name': json['name'] == null ? undefined : json['name'],
        'category': json['category'] == null ? undefined : CategoryFromJSON(json['category']),
        'price': json['price'] == null ? undefined : json['price'],
        'description': json['description'] == null ? undefined : json['description'],
        'images': json['images'] == null ? undefined : json['images'],
    };
}

export function ManageProductRequestToJSON(json: any): ManageProductRequest {
    return ManageProductRequestToJSONTyped(json, false);
}

export function ManageProductRequestToJSONTyped(value?: Omit<ManageProductRequest, 'notifications'|'isValid'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'category': CategoryToJSON(value['category']),
        'price': value['price'],
        'description': value['description'],
        'images': value['images'],
    };
}

