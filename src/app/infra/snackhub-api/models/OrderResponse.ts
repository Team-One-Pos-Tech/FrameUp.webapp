/* tslint:disable */
/* eslint-disable */
/**
 * Snack Hub API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Notification } from './Notification';
import {
    NotificationFromJSON,
    NotificationFromJSONTyped,
    NotificationToJSON,
    NotificationToJSONTyped,
} from './Notification';

/**
 * 
 * @export
 * @interface OrderResponse
 */
export interface OrderResponse {
    /**
     * 
     * @type {Array<Notification>}
     * @memberof OrderResponse
     */
    readonly notifications?: Array<Notification> | null;
    /**
     * 
     * @type {boolean}
     * @memberof OrderResponse
     */
    readonly isValid?: boolean;
    /**
     * 
     * @type {string}
     * @memberof OrderResponse
     */
    id?: string;
    /**
     * 
     * @type {Array<object>}
     * @memberof OrderResponse
     */
    items?: Array<object> | null;
    /**
     * 
     * @type {string}
     * @memberof OrderResponse
     */
    status?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderResponse
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof OrderResponse
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the OrderResponse interface.
 */
export function instanceOfOrderResponse(value: object): value is OrderResponse {
    return true;
}

export function OrderResponseFromJSON(json: any): OrderResponse {
    return OrderResponseFromJSONTyped(json, false);
}

export function OrderResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'notifications': json['notifications'] == null ? undefined : ((json['notifications'] as Array<any>).map(NotificationFromJSON)),
        'isValid': json['isValid'] == null ? undefined : json['isValid'],
        'id': json['id'] == null ? undefined : json['id'],
        'items': json['items'] == null ? undefined : json['items'],
        'status': json['status'] == null ? undefined : json['status'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function OrderResponseToJSON(json: any): OrderResponse {
    return OrderResponseToJSONTyped(json, false);
}

export function OrderResponseToJSONTyped(value?: Omit<OrderResponse, 'notifications'|'isValid'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'items': value['items'],
        'status': value['status'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

